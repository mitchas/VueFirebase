////////////////////////// 
////   UI Elements   ////
////////////////////////
// 
// Styles for various global UI elements
// 
// 		.page
// 			- standard padding and layout for regular pages
// 			- optional .form-page class to center form pages, set max width
// 		.card
// 			- container with border and background to stand out
// 			- optional class .small to make smaller
// 		.badge
// 			- Colored text with optional icon,
// 			- Color classes default (primary), .blue, .red, .green, .yellow, .black
// 		.breadcrumbs
// 			- Navigation breadcrumbs
// 		.tabs
// 			- Navigation tabs for within a page
// 		.tooltip
// 			- Tooltip label for hover hints
// 			- optional .tooltip-left or .tooltip-right classes for setting float direction
// 		.custom-icon
// 			- CSS for font-awesome like custom SVG icons
// 		.svg-background
// 			- Set svg as fill background for element
// 		CUSTOM ELEMENTS
// 		.feature-horizontal-display
// 			- Split Colored SVG/Description display
// 


/////////////////////////////
////    Page Styling    ////
///////////////////////////
// Don't use class .page for pages that need anything full width, etc
.page{
	box-sizing: border-box;
	padding: 25px 0 50px 0;
	min-height: 70vh;
	margin-top: 11px;

	// Adjust padding on mobile
	@media (max-width: @screenMD) {
		padding: 10px 20px 65px 20px;
		margin-top: 0;
	}
	@media (max-width: @screenSM) {
		padding: 20px 15px 65px 15px;
	}

	// Form page 
	// max-width of 550px. Centered margin,
	&.form-page{
		@media (max-width: @screenMD) {
			max-width: 550px;
			margin: 0 auto;
		}
	}

	// Full width page
	&.full-width{
		// Adjust padding on mobile
		@media (max-width: @screenMD) {
			padding-left: 0;
			padding-right: 0;
			margin-top: 0;
		}
		@media (max-width: @screenSM) {
			padding-bottom: 65px;
		}
	}
}
// Add padding on sides of wrappers for full-width pages
.padded{
	// Adjust padding on mobile
	@media (max-width: @screenMD) {
		padding: 0 20px;
	}
	@media (max-width: @screenSM) {
		padding: 0 15px;
	}
}


/////////////////////
////    Card    ////
///////////////////
.card{
	background-color: var(--backgroundLayer);
	box-sizing: border-box;
	padding: 15px;
	max-width: var(--maxWidthLarge);
	width: 100%;
	box-shadow: var(--shadowLight);
	border-radius: var(--borderRadiusSmall);

	// Smaller
	&.small{
		max-width: 600px;
	}

	// Action buttons in card, center single, or space between if more than 1
	.card-buttons{
		padding: 15px 0 0 0;
		display: flex;
		justify-content: space-between;
	}

	// Make input backgrounds background color in cards
	input[type='text'],
	input[type='date'],
	input[type='email'],
	input[type='password'],
	input[type='number'],
	input[type='search'],
	input[type='tel'],
	input[type='url'],
	select,
	textarea{
		border: 1px solid var(--border);
	}
}

/////////////////////
////   Badge    ////
///////////////////
.badge{
	display: inline-block;
	font-weight: 500;
	font-size: 12px;
	box-sizing: border-box;
	background-color: var(--primary);
	color: var(--white);
	padding: 5px 6px 6px 7px;
	border-top-left-radius: 20px;
	border-bottom-left-radius: 20px;
	font-family: var(--systemFont);
	border-top-right-radius: 6px;
	border-bottom-right-radius: 6px;
	letter-spacing: 0.18px;
	text-transform: capitalize;
	// Adjust padding on mobile
	@media (max-width: @screenSM) {
		padding: 5px 6px 5px 7px;
		font-size: 11.5px;
	}

	i{
		margin-right: 5px;
		transform: scale(1.1);
		transform-origin: center center;
	}

	// Color variations
	&.blue{background-color:var(--blue);}
	&.red{background-color:var(--red);}
	&.green{
		color: var(--greenText);
		background-color:var(--green);
	}
	&.yellow{
		background-color:var(--yellow);
		color: var(--yellowText);
	}
	&.grey{
		background-color:var(--grey);
		color: var(--text);
	}
	&.transparent{
		background-color: transparent;
		color: var(--text);
	}
	&.black{background-color:var(--black);}

	// Reverse badge - curve and icon reversed
	&.reverse{
		border-top-left-radius: 6px;
		border-bottom-left-radius: 6px;
		border-top-right-radius: 20px;
		border-bottom-right-radius: 20px;

		i{
			margin-left: 5px;
			margin-right: 0;
		}
	}

}

///////////////////////////
////   Breadcrumbs    ////
/////////////////////////
.breadcrumbs{
	display: flex;
	width: 100%;
	box-sizing: border-box;
	justify-content: flex-start;
	flex-wrap: wrap;

	@media (max-width: @screenSM) {
		// flex-wrap: nowrap;
		// overflow: auto;
	}

	// Hide scrollbars
	// Hidden
	&::-webkit-scrollbar{
		width: 0px;
		display: none;
	}
	// Scrollbar handle/thumb
	&::-webkit-scrollbar-thumb{
		display: none;
		width: 0px;
	}

	.crumb{
		display: flex;
		font-size: 16px;
		font-weight: 600;
		letter-spacing: 0.35px;
		color: var(--textLightest);
		transition: var(--transition);
		text-transform: capitalize;
		width: fit-content;

		// Shrink on mobile
		@media (max-width: @screenMD) {
			font-size: 14px;
			margin-bottom: 6px;
		}
		@media (max-width: @screenSM) {
			font-size: 13px;
			text-align: center;
		}

		span{
			height: 100%;
			display: flex;
			flex-direction: column;
			justify-content: center;
			margin-right: 8px;
			white-space: pre;
		}

		// Add arrow before each child
		&:before{
			content: '\f30b';
			font-family: var(--fontAwesome);
			display: block;
			padding: 0 8px 0 0;
			color: var(--textLightest);
			position: relative;
			top: -1px;
			font-weight: 600;
			display: flex;
			flex-direction: column;
			justify-content: center;
		}

		// Remove arrow before first child
		&:first-child{
			&:before{
				display: none;
			}
		}

		// Hover
		&:hover{
			text-decoration: none;
			color: var(--textLight);
			transition: var(--transition);
			cursor: pointer;

			span{
			}
		}

		// Highlight last (current) crumb
		&.active{
			color: var(--text);
		}

	}
}

////////////////////////////////
////    Tabs Navigation    ////
//////////////////////////////
.tabs{
	display: flex;
	box-sizing: border-box;
	background-color: var(--backgroundLayer);
	width: fit-content;
	border-radius: 20px;
	box-shadow: var(--shadowLight);

	// Full width mobile
	@media (max-width: @screenSM) {
		width: 100%;
	}

	.tab{
		height: 40px;
		padding: 0 20px 2px 20px;
		font-family: var(--systemFont);
		font-size: 14px;
		letter-spacing: 0.3px;
		flex-grow: 3;
		font-weight: 500;
		color: var(--textLight);
		border: none;
		text-align: center;
		background-color: transparent;
		transition: var(--transition);
		border-radius: 8px;

		// Icon
		i{
			transform:scale(1.3);
			margin-right: 8px;
		}

		// Adjust for mobile
		@media (max-width: @screenSM) {
			padding: 0 0 1px 0;
			font-size: 12.5px;
			letter-spacing: 0.4px;
			height: 36px;
		}

		// More spacing on last tab
		&:last-child{
			border-bottom-right-radius: 20px;
			border-top-right-radius: 20px;
		}
		// Border radius on first/last child
		&:first-child{
			border-bottom-left-radius: 20px;
			border-top-left-radius: 20px;
		}

		// Hover
		&:hover{
			color: var(--text);
			transition: var(--transition);
		}

		// Active tab
		&.active{
			font-weight: 500;
			background-color: var(--primary);
			text-decoration: underline;
			color: var(--white);
			border-radius: 20px;
		}
	}
}


////////////////////////
////    Tooltip    ////
//////////////////////
// Add .tooltip class to element that needs tooltip
.tooltip{

	// Tooltip body - icon and text
	.tooltip-body{
		background-color: var(--backgroundLayer);
		width: fit-content;
		box-sizing: border-box;
		padding: 4px 0;
		border-radius: 5px;
		box-shadow: var(--shadowLight);
		position: absolute;
		top: 50%;
		margin-top: -13px;
		left: 0;
		white-space: pre;
		max-width: 0px;
		transition: var(--transition);
		pointer-events: none;
		overflow: hidden;
		transition-delay: 0s;
		opacity: 0;
		z-index: 100;

		@media (max-width: @screenSM) {
			padding: 4px 0;
			margin-top: -13px;
		}

		i,.tooltip-text{
			display: inline-block;
			vertical-align: baseline;
			height: 100%;
		}
		// Icon
		i{
			font-size: 16px;
			box-sizing: border-box;
			margin-left: 6px;
			color: var(--border);

			@media (max-width: @screenSM) {
				font-size: 12px;
			}
		}
		.tooltip-text{
			box-sizing: border-box;
			font-size: 12px;
			font-weight: 600;
			text-transform: uppercase;
			letter-spacing: 0.8px;
			position: relative;
			color: var(--text);
			top: -1px;
			margin-right: 6px;
			margin-left: 6px;

			span{
				text-transform: uppercase;
			}

			@media (max-width: @screenSM) {
				font-size: 10px;
				top: 0;
			}
		}

		// Color the icons
		&.gold{
			i{color: var(--secondary);}
		}
		&.green{
			i{color: var(--green);}
		}
		&.blue{
			i{color: var(--blue);}
		}
		&.red{
			i{color: var(--red);}
		}
		&.grey{
			i{color: var(--border);}
		}
	}

	// Float to the left
	&.tooltip-left{
		.tooltip-body{
			left: auto;
			right: 100%;
		}
	}
	// Float to the right
	&.tooltip-right{
		.tooltip-body{
			left: 100%;
			right: auto;
		}
	}

	// Hover element with class tooltip to show it
	&:hover{
		.tooltip-body{
			max-width: 300px;
			transition: var(--transition);
			transition-delay: 0.5s;
			opacity: 1;
		}
	}
}

/////////////////////////////
////    Custom Icons    ////
///////////////////////////
.custom-icon{

	// All custom icons should be the same dimensions
	&:before{
		content: '\00a0';
		display: block;
		width: 100%;
		color: rgba(0,0,0,0);	
		background-size: auto 100%;
		background-repeat: no-repeat;
		background-position: center center;
		filter: invert(var(--iconInvert));
	
	}
	
	// Minnesota Icon
	&.ci-minnesota{
		&:before{
			background-image: url('../assets/custom_icons/minnesota.svg');
		}
	}
}


///////////////////////////////
////    SVG Background    ////
/////////////////////////////
// Add SVG background to relative positioned element, to allow stroke/fill change
.svg-background{
	position: relative;

	*:not(.background),
	*:not(.svg){
		z-index: 10;
		position: relative;
	}

	.background{
		pointer-events: none;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		overflow: hidden;
		z-index: 5;
		border-radius: var(--borderRadiusSmall);

		// Actual SVG element
		.svg{
			width: 100%;
			height: 100%;
			height: auto;
			z-index: 5;

			.stroke{stroke: var(--primary);}
			.fill{fill: var(--primary);}

			// if different svgs are needed for mobile and desktop, it will switch them
			&.desktop{
				display: block;
				@media (max-width: @screenSM) {
					display: none;
				}
			}
			&.mobile{
				display: none;
				@media (max-width: @screenMD) {
					display: block;
				}
			}
		}
	}


	// Color variations
	&.blue{
		background-color: var(--blueLight);
		.svg{
			.stroke{stroke:var(--blue)}
			.fill{fill:var(--blue)}
		}
	}
	&.red{
		background-color: var(--redLight);
		.svg{
			.stroke{stroke:var(--red)}
			.fill{fill:var(--red)}
		}
	}
	&.green{
		background-color: var(--greenLight);
		.svg{
			.stroke{stroke:var(--green)}
			.fill{fill:var(--green)}
		}
	}
	&.yellow{
		background-color: var(--yellowLight);
		.svg{
			.stroke{stroke:var(--yellow)}
			.fill{fill:var(--yellow)}
		}
	}
	&.purple{
		background-color: var(--purpleLight);
		.svg{
			.stroke{stroke:var(--purple)}
			.fill{fill:var(--purple)}
		}
	}
	&.grey{
		background-color: var(--inputBackground);
		.svg{
			.stroke{stroke:var(--textLightest)}
			.fill{fill:var(--textLightest)}
		}
	}
	&.invert{
		background-color: var(--inputBackground);
		.svg{
			.stroke{stroke:var(--text)}
			.fill{fill:var(--text)}
		}
	}
}


///////////////////////////
//    Custom Elements   //
/////////////////////////
// Feature horizontal Display
.feature-horizontal-display{
	display: flex;
	justify-content: space-between;

	// Adjust padding on mobile
	@media (max-width: @screenSM) {
		flex-wrap: wrap;
	}

	.graphic{
		display: flex;
		flex-direction: column;
		justify-content: center;
		position: relative;
		width: fit-content;
		// Adjust sizing
		@media (max-width: @screenMD) {
			justify-content: flex-start;
		}
		// Center horizontally on mobile
		@media (max-width: @screenSM) {
			flex-direction: row;
			margin-bottom: 25px;
			width: 100%;
		}
		
		.graphic-body{
			width: 100%;
			max-height: 200px;
			min-height: 200px;
			width: 200px;
			min-width: 200px;
			box-shadow: var(--shadowLight);
			display: flex;
			flex-direction: column;
			border: none;
			box-sizing: border-box;
			padding: 25px 0;
			text-align: center;
			border-radius: var(--borderRadiusSmall);

			// Adjust sizing
			@media (max-width: @screenLG) {
				max-height: 150px;
				min-height: 150px;
				width: 150px;
				min-width: 150px;
			}
			// Shrink more on small
			@media (max-width: @screenSM) {
				max-height: 120px;
				min-height: 120px;
				width: 120px;
				min-width: 120px;
			}

			.graphic-icon{
				font-size: 82px;
				width: 100%;
				text-align: center;
				flex-grow: 3;
				display: flex;
				flex-direction: column;
				justify-content: center;
				color: var(--primary);

				// Shrink
				@media (max-width: @screenLG) {
					font-size: 62px;
				}
				// Shrink
				@media (max-width: @screenSM) {
					font-size: 48px;
				}
			}
			&.red .graphic-icon{color:var(--red);}
			&.blue .graphic-icon{color:var(--blue);}
			&.green .graphic-icon{color:var(--green);}
			&.yellow .graphic-icon{color:var(--yellow);}
			&.purple .graphic-icon{color:var(--purple);}
			&.grey .graphic-icon{color:var(--text);}
			&.invert .graphic-icon{color:var(--text);}
		}
	}

	// Text
	.body{
		display: none;
		box-sizing: border-box;
		display: flex;
		flex-direction: column;
		justify-content: center;
		padding-left: 35px;
		flex-grow: 3;

		@media (max-width: @screenSM) {
			padding-left: 0;
		}
	}

	// Reverse row
	&.reverse{
		flex-direction: row-reverse;
		.body{
			padding-right: 35px;
			padding-left: 0;

			@media (max-width: @screenSM) {
				padding-right: 0;
			}
		}
	}
}