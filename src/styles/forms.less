////////////////////
////   Forms   ////
//////////////////
// 
// Styling for various form form tags (inputs, etc) and custom form elements and styling
// 
// 		.field
// 			- Form field wrapper for consistent sizing and spacing
// 		text classes
// 			- label
// 			- hint
// 			- input character count
// 		input elements & textarea
// 		buttons
// 			- colors: default (primary), .red, .green, .yellow, .purple, .grey
// 		Checkboxes, Radios, Toggle Switches
// 		custom-picker
// 			custom visual radio or checkbox picker - icon with text, horizontal buttons
// 		.input-validator
// 			Spinner, Success, or Error icon shown in inputs that need validating
// 			Currently used in inputs to check usernames, etc
// 


// Simple form fields
// Sets max width
.field{
	max-width: var(--formWidthDesktop);
	position: relative;

	@media (max-width: @screenMD) {
		width: 100%;
		max-width: 600px;
	}

	// Field body
	// Set standard text size, small text
	.field-body{
		font-weight: 600;
		font-size: 18px;
		letter-spacing: 0.4px;
		padding: 2px 0;
		line-height: 22px;

		// Horizontal field value display
		// Action / buttons on right
		.field-value{
			box-sizing: border-box;
			padding: 0 0 0 0;

			.value,
			.action{
			}

			.value{
				flex-grow: 3;
				box-sizing: border-box;
				font-size: 18px;
			}

			small{
				font-weight: 500;
				font-family: var(--systemFont);
				font-size: 14px;
			}
			// Right side, buttons/action
			.action{
				margin-top: 8px;

				.button{
					margin-right: 12px;
				}
			}
		}
	}

	// Required asterisk 
	.required{
		position: absolute;
		top: 0;
		right: 0;
		color: var(--red);
		font-size: 12px;
		opacity: 0.75;
	}
}

// Horizontal field for radios, checkboxes, etc
.field-horizontal{
	display: flex;

	.input{
		display: flex;
		flex-direction: column;
		justify-content: center;
		padding-right: 12px;
	}
	label{
		padding: 14px 0 12px 0;
		line-height: 15px;
		font-size: 15px;
	}
}

////////////////////////
//      Text        //
//////////////////////
// Labels
label{
	padding: 2px 0 4px 0px;
	letter-spacing: 0.25px;
	display: block;
	color: var(--text);
	font-size: 16px;
	font-weight: 500;
	font-family: var(--systemFont);

	// Make smaller on mobile
	@media (max-width: @screenMD) {
		font-size: 14px;
	}
	@media (max-width: @screenSM) {
		font-size: 13px;
	}

	// Smaller and less visible
	&.small{
		font-size: 13px;
		padding-bottom: 5px;
		font-weight: 500;
		letter-spacing: 0.1px;
		color: var(--text);
	}

	// Invert color
	&.invert{
		color: var(--background);
	}

	// Reset to use with other elements (ie button)
	&.reset{
		display: block;
	}
}
// Small label hint for more info
.hint{
	font-size: 13px;
	font-weight: 500;
	line-height: 16px;
	padding: 0 0 3px 0;
	display: block;
	color: var(--textLighter);
	letter-spacing: 0.35px;

	b{
		font-weight: 600;
	}

	// Make smaller on mobile
	@media (max-width: @screenSM) {
		font-size: 12px;
		line-height: 12px;
		padding: 2px 0 2px 0;
	}
}
// Character Count Under inputs
// Position absolute bottom, 17px below, so parent must be relative
// Works great inside .field-body immediately following an input or textarea
.character-count{
	font-size: 12px;
	font-weight: 500;
	letter-spacing: 1px;
	color: var(--textLightest);
	position: absolute;
	box-sizing: border-box;
	padding-left: 2px;
	bottom: -17px;
	font-family: var(--systemFont);
}



////////////////////////
//      Inputs       //
//////////////////////
// outline / accessibility styles for all inputs
input,button,textarea,a,select,.focusable{
	outline: 2px dotted transparent;
	outline-offset: -2px;
	transition: outline 0.12s ease, outline-offset 0.12s ease;
	
	// Focus, show outline
	&:focus{
		outline: 2px dotted var(--outline) !important;
		outline-offset: 2px;
		transition: outline 0.12s ease, outline-offset 0.12s ease;

		// Disable outline on mobile
		@media (max-width: @screenMD) {
			// outline: none !important;
		}
	}
	
	// Acttive
	&:active{
		outline: 2px dotted transparent;
    }
}
// Hide invalid red dropshadow
input:invalid{
	box-shadow: none;
}
// Text Inputs
input[type='text'],
input[type='date'],
input[type='email'],
input[type='password'],
input[type='number'],
input[type='search'],
input[type='tel'],
input[type='url'],
select,
textarea{
	max-width: 100%;
	width: 100%;
    font-size: 16px;
	// background-color: var(--inputBackground);
	box-sizing: border-box;
	padding: 0 8px;
	color: var(--text);
	font-family: var(--systemFont);
	font-weight: 500;
	letter-spacing: 0.35px;
	border-radius: var(--borderRadiusSmall);
	border: none;
	transition: all 0.1s ease, border-color 0.15s ease;
	font-weight: 500;
	background-color: var(--inputBackground);

	// Increase size on mobile
	@media (max-width: @screenMD) {
		font-size: 14px;
		padding: 0 12px;
		// border-color: transparent;
	}
	
	// Hover and focus states
	&:hover,
	&:focus{
		border-color: var(--border);
		transition: all 0.1s ease, border-color 0.15s ease;
		// Light border mobile
		@media (max-width: @screenMD) {
			border-color: var(--border);
		}
	}
	
	// Placeholder
	&::placeholder{
		opacity: 0.5;
		color: var(--textLightest);
		letter-spacing: 0.4px;
		font-weight: 500;
	}
}
// Single line text inputs
input[type='text'],
input[type='email'],
input[type='password'],
input[type='number'],
input[type='search'],
input[type='date'],
input[type='tel'],
input[type='url']{
    height: 40px;
	
	// decrease size on mobile
	@media (max-width: @screenMD) {
		height: 38px;
	}
}
// Textarea
textarea{
    line-height: 20px;
	padding-top: 8px;
	padding-bottom: 8px;
	line-height: 20px;
	min-height: 100px;
	
	@media (max-width: @screenMD) {
		font-size: 14px;
		padding-top: 5px;
		padding-bottom: 5px;
		line-height: 26px;
	}
}
// Select needs own height definition
select{
	height: 40px;
	-moz-appearance: none;
}


// Input Group
// Input Group
.input-group{
	display: flex;

	.input-group-label{
		display: flex;
		flex-direction: column;
		justify-content: center;
		background-color: var(--grey);
		font-weight: 600;
		padding: 0 10px;
		border-radius: var(--borderRadiusSmall);
		border: 1px solid var(--border);
		font-size: 15px;
		letter-spacing: 0.35px;
	}
	// input
	input{
		background-color: var(--background);
		border: 1px solid var(--border);
		border-left: none;
	}

	// Change border radii based on child position instead of class, so it can go on either side
	:nth-child(1){
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;

		&.input-group-label{
			border-right-color: transparent;
		}
	}
	:nth-child(2){
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;

		&.input-group-label{
			border-left-color: transparent;
		}
	}
}


////////////////////////
//      Buttons      //
//////////////////////
button{
	background-color: transparent;
	border: none;
}
.button{
	border: none;
	color: white;
	height: 36px;
	border-radius: 3px;
	font-size: 14px;
	letter-spacing: 0.15px;
	transition: var(--transition);
	font-weight:500;
	padding: 0px 14px 2px 14px;
	background-color: rgba(255,255,255,0.1);
	background-color: var(--primary);
	box-sizing: border-box;
	transform: translateY(0px);
	color: var(--white);
	box-shadow: var(--shadowLight);
	font-family: var(--systemFont);

	// Increase size on mobile
	@media (max-width: @screenMD) {
		letter-spacing: 0.4px;
		padding: 0px 14px;
	}
	// Even more on small
	@media (max-width: @screenSM) {
		padding: 0px 14px;
	}

	// States
	&:hover{
		cursor: pointer;
		text-decoration: underline;
		background-color: var(--primaryHover);
		transition: var(--transition);
		box-shadow: none;
	}
	&:active{
		transform: translateY(1px);
		transition: var(--transition);
	}
	&:focus{
		text-decoration: underline;
	}

	// Add spacing on first element (either i or span)
	span:first-child,
	i:first-child{
		margin-right: 9px;
	}

	// Increase icon size without affecting button size
	i{
		transform: scale(1.325);
		transform-origin: center center;
	}

	// Color Variations
	// Blue
	&.blue{
		background-color: var(--blue);
	}
	// Green
	&.green{
		background-color: var(--green);
		color: var(--text);
	}
	// Red
	&.red{
		background-color: var(--red);
	}
	// Yellow
	&.yellow{
		background-color: var(--yellow);
		color: var(--yellowText);
	}
	// Purple
	&.purple{
		background-color: var(--purple);
	}
	// Grey
	&.grey,
	&.gray{
		background-color: var(--grey);
		color: var(--text);
	}
	// Invert
	&.invert,
	&.invert{
		background-color: var(--text);
		color: var(--background);
	}
	// Background
	// Same color button as background color
	&.background{
		background-color: var(--backgroundLayer);
		color: var(--text);
	}
	

	// Size Variations
	// small
	&.small{
		height: 30px;
		font-size: 13px;
		letter-spacing: 0.26px;
		font-weight: 600;
		padding: 0 8px 0 8px;

		// Increase size on mobile
		@media (max-width: @screenMD) {
			letter-spacing: 0.14px;
			padding: 0px 10px;
		}
		// Even more on small
		@media (max-width: @screenSM) {
			font-weight: 500;
		}

		// Add spacing on first element (either i or span)
		span:first-child,
		i:first-child{
			margin-right: 6px;
		}

		// Decrease icon size
		i{
			transform: scale(1.2);
		}
	}
	// big
	&.big{
		height: 44px;
		font-size: 18px;
		font-weight: 600;
		padding: 0 14px 2px 14px;
		letter-spacing: 0.5px;

		// Increase size on mobile
		@media (max-width: @screenMD) {
			letter-spacing: 0.4px;
			padding: 0px 14px;
		}
		// Even more on small
		@media (max-width: @screenSM) {
			padding: 0px 12px;
			font-size: 16px;
		}

		// Add spacing on first element (either i or span)
		span:first-child,
		i:first-child{
			margin-right: 10px;
		}
	}

	// Disabled
	&:disabled{
		background-color: var(--inputDisabled);
		color: var(--inputDisabledText);
		border-color: var(--border);
		opacity: 0.8;

		&:hover{
			cursor: default;
			background-color: var(--inputDisabled);
			color: var(--inputDisabledText);
			opacity: 0.8;
			text-decoration:none;
		}
	}
}

/////////////////////////
//     Checkboxes     //
///////////////////////
input[type="checkbox"] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	-webkit-tap-highlight-color: transparent;
	cursor: pointer;
}
input[type="checkbox"]:focus {
	outline: 0;
}

// Turn into checks
.check {
	height: 28px;
	min-height: 28px;
	max-height: 28px;
	width: 28px;
	min-width: 28px;
	max-width: 28px;
	display: inline-block;
	position: relative;
	margin: 0;
	border-radius: var(--borderRadiusSmall);
	box-sizing: border-box;
	border: 1px solid transparent;
	transition: all 0.2s ease;
	background: var(--inputBackground);
	font-size: 16px;
	font-weight: 800;
	box-shadow: var(--shadow);
	// Remove border mobile
	@media (max-width: @screenMD) {
		border-color: transparent;
	}
	// States
	&:hover,
	&:focus{
		transition: all 0.2s ease;
		// Lighter border mobile
	}
	
	// Check icon
	&:after {
		//28x28 dimensions
		content: "\f00c";
		position: relative;
		font-family: var(--fontAwesome);
		font-weight: 900;
		transition: var(--bezierTransition);
		color: var(--textLight);
		opacity: 0.3;
		font-size: 16px;
		left: 5px;
		top: 4px;
	}

	// Darken border, 
	&:checked {
	}
	// Full opacity icon
	&:checked:after {
		opacity: 1;
	}

	// Icon variants
	// Change to badge
	&.badge:after{
		content: '\f336';
		font-weight: 400;
		font-size: 20px;
		top: 2px;
		left: 3px;
	}
	&.badge:checked:after{
		content: '\f336';
	}
}


// Turn checkbox into toggle switch 
.toggle{
	height: 33px;
	width: 52px;
	border-radius: 16px;
	display: inline-block;
	position: relative;
	margin: 0;
	border: 1px solid var(--border);
	transition: all .2s ease;
	background-color: var(--inputBackground);

	// Remove border mobile
	@media (max-width: @screenMD) {
		border-color: transparent;
	}

	// Circle (switch that moves)
	&:after{
		content: '';
		position: absolute;
		top: 3px;
		left: 4px;
		width: 25px;
		height: 25px;
		border-radius: 50%;
		background: var(--text);
		opacity: 0.22;
		transition: all .2s cubic-bezier(.5,.1,.75,1.35);
		border: 1px solid var(--text);
		box-sizing: border-box;
		transition: var(--transition);
	}

	// Hover
	&:hover:after{
		opacity: 0.42;
		transition: var(--transition);
	}

	// Checked, move circle to right, full color
	&:checked{
		border: 1px solid var(--border);
		background: var(--backgroundLayer);

		&:after{
			background: var(--primary);
			transform: translateX(17px);
			border-color: var(--primaryHover);
			opacity: 1;
		}
	}
}

// Custom radio or checkbox group to select different options
// Horizontal, icon with text
// Check business profile settings to see example
.custom-picker{
	display: flex;
	width: 100%;
	justify-content: flex-start;
	flex-wrap: wrap;
	user-select: none;
	overflow-x: auto;

	// no wrap - horizontal scroll on mobile
	@media (max-width: @screenMD) {
		flex-wrap: nowrap;
	}

	// Each option
	.option{
		display: flex;
		flex-direction: column;
		justify-content: center;
		text-align: center;
		height: 65px;
		box-sizing: border-box;
		padding: 0 0px;
		border-radius: var(--borderRadius);
		background-color: var(--backgroundLayer);
		max-width: 93px;
		// border: 1px solid var(--border);
		min-width: 93px;
		flex-grow: 3;
		color: var(--textLighter);
		margin: 0 10px 6px 0;
		position: relative;
		transform: scale(0.9);
		transition: var(--transition);
		font-family: var(--systemFont);

		&:last-child{
			&:before{
				content: '';
				height: 100%;
				width: 1px;
				position: absolute;
				right: -15px;
			}
		}

		// Icon for option
		i{
			margin-bottom: 8px;
			font-size: 24px;

			// Custom icons
			&.custom-icon{
				opacity: 0.5;
			}
		}
		// Option text
		span{
			letter-spacing: 0;
			font-size: 13px;
			font-weight: 500;
			width: 100%;
			text-transform: capitalize;

			// Shrink on md
			@media (max-width: @screenMD) {
				font-size: 11.5px;
				line-height: 13px;
			}
		}

		// Check
		&:after{
			content: '\f111';
			// content: '\f058';
			font-family: var(--fontAwesome);
			position: absolute;
			top: 5px;
			right: 5px;
			font-size: 18px;
			font-weight: 500;
			transition: var(--transition);
			color: var(--border);
		}

			
		// Hover state
		&:hover{
			cursor: pointer;
			transition: var(--transition);
			text-decoration: none;

			span{
				text-decoration: underline;
			}
			i{
			}

			// Custom icons
			.custom-icon{
				opacity: 1;
			}
			// Darken check
			&:after{
				color: var(--textLightest);
				transition: var(--transition);
			}
		}

	
		// Option Selected
		&.active{
			color: var(--text);
			border-color: var(--border);
			position: relative;
			transform: scale(1);
			box-shadow: var(--shadowLight);

			i{
				// Custom icons
				&.custom-icon{
					opacity: 1;
				}
			}
			&:after{
				content: '\f058';
				color: var(--text);
			}
		}
	}

	// Large
	// Increase size of everything a bit
	&.large{

		.option{
			height: 85px;
			border-radius: var(--borderRadiusSmall);
			max-width: 124px;
			flex-grow: 3;
			margin-right: 12px !important;
			i{
				margin-bottom: 12px;
			}
			span{
				line-height: 14px;
			}
		}
	}

	// Scroll
	// Scrolls horizontally overflowing page with larger options
	&.horizontal{
		overflow-x: auto;

		// no wrap - horizontal scroll on mobile
		@media (max-width: @screenMD) {
			padding-bottom: 6px;
		}

		.option{
			height: 50px;
			border-radius: var(--borderRadius);
			flex-grow: 0;
			margin: 0 10px 14px 0 !important;
			flex-direction: row;
			padding: 0 28px 0 0;
			width: fit-content;
			min-width: fit-content;
			max-width: fit-content;
			justify-content: flex-start;

			// Adjust spacing
			@media (max-width: @screenMD) {
				margin: 0 10px 0 0 !important;
				height: 46px;
				padding: 0 30px 0 0;
			}

			i,span{
				display: flex;
				flex-direction: column;
				justify-content: center;
				height: 100%;
			}
			i{
				position: relative;
				top: -1px;
				width: 52px;
				&.fa-city{
					font-size: 20px;
				}
				// Shrink on md
				@media (max-width: @screenMD) {
					font-size: 22px;
					width: 58px;
					top: 0;
				}
			}
			span{
				font-size: 12.5px;
				text-align: left;
				line-height: 15px;
				font-weight: 500;
				white-space: pre-line;
				max-width: 134px;
				position: relative;
				top: -1px;
				// min-width: 150px;

				// Shrink on md
				@media (max-width: @screenMD) {
					font-size: 11.5px;
					top: 0;
					line-height: 13px;
				}
			}

			// Move check to right center
			&:after{
				top: 0;
				right: 0;
				display: flex;
				flex-direction: column;
				justify-content: center;
				font-size: 18px;
				font-weight: 400;
				height: 100%;
				width: 30px;
			}

			// Color options for categories, etc
			&.active.yellow i{color: var(--yellow);}
			&.active.red i{color: var(--red);}
			&.active.blue i{color: var(--blue);}
			&.active.green i{color: var(--greenHover);}
			&.active.purple i{color: var(--purple);}
			&.active.orange i{color: var(--orange);}
			&.active.pink i{color: var(--pink);}
		}

	}

	// True / false toggle (buttons)
	button{
		width: fit-content;
		span,i{
			width: 94px;
		}
	}
}

// Prefernce toggle
// Toggle on left, label on right
.preference{
	display: flex;

	.input{
		box-sizing: border-box;
		padding: 0 25px 0 0;
		width: 80px;
		max-width: 80px;
		min-width: 80px;
	}

	label{
		display: flex;
		flex-direction: column;
		justify-content: center;

		small{
			display: block;
			padding-top: 10px;
			font-weight: 400;
		}
	}
}



//////////////////////////////
//     Input Validator     //
////////////////////////////
// Input validator
.input-validator{
	display: flex;
	flex-direction: column-reverse;
	
	// Check icon
	.validator-icon{
		display: block;
		width: 100%;
		position: absolute;
		top: 100%;
		overflow: visible;
		height: 40px;
		pointer-events: none;
		display: flex;
		justify-content: flex-end;
		box-sizing: border-box;
		padding-top: 2px;
		z-index: 1;
	
		// Icon element
		i{
			display: flex;
			flex-direction: column;
			justify-content: center;
			font-size: 20px;
			padding: 0 12px 2px 0;
			box-sizing: border-box;
	
			&.fa-check-circle{
				color: var(--green);
			}
			&.fa-times-circle{
				color: var(--red);
			}
	
			// Increase size on mobile
			@media (max-width: @screenMD) {
				font-size: 24px;
			}
		}
	}

	// Status updates on blur, so while input is focused,
	// hide success/error icon, and show typing indicator
	.input-to-validate:focus{
		+ label .validator-icon{

			// Hide check/x icon
			i{
				display: none;
			}

			// Add typing indicator
			&:after{
				content: '\f2dc';
				font-family: var(--fontAwesome);
				display: flex;
				flex-direction: column;
				justify-content: center;
				color: var(--text);
				font-size: 16px;
				padding: 0px 13.5px;
				box-sizing: border-box;
				transform-origin: 50% 50%;
				text-align: center;
				animation: typing-indicator-animation 2s linear infinite;
				position: relative;
				top: -1px;
				font-weight: 400;
			}
		}
	}
}
// Keyframe for input-to-validate
@keyframes typing-indicator-animation {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}